syntax = "proto3";

package taskscheduler;


// 任务状态枚举
enum TaskStatus {
    PENDING = 0;    // 等待执行
    RUNNING = 1;    // 正在执行
    SUCCESS = 2;    // 执行成功
    FAILED = 3;     // 执行失败
}

// 任务类型枚举
enum TaskType {
    FUNCTION = 0;   // 函数回调
    COMMAND = 1;    // 脚本命令
}

// 任务结构
message Task {
    string task_id = 1;           // 任务唯一ID
    TaskType type = 2;            // 任务类型
    string content = 3;           // 任务内容（命令或函数名）
    string worker_id = 4;         // 执行器ID
    TaskStatus status = 5;       // 任务状态
    map<string, string> metadata = 6; // 任务的参数信息  命令行——> parm1:-r  函数-> 类型：值
}

// 执行结果结构
message TaskResult {
    string task_id = 1;           // 任务ID
    TaskStatus status = 2;        // 执行状态
    string output = 3;            // 执行输出
    string error_message = 4;     // 错误信息
    int64 start_time = 5;         // 开始时间戳
    int64 end_time = 6;           // 结束时间戳
    int64 duration_ms = 7;        // 执行时长（毫秒）
    string worker_id = 8;         // 执行器ID

}

// 心跳消息
message WorkerHeartbeat {
    string worker_id = 1;         // 执行器ID
    string worker_ip = 2;         // 执行器IP
    int32 worker_port = 3;        // 执行器端口
    int64 timestamp = 4;          // 心跳时间戳
    bool is_healthy = 5;          // 健康状态
    map<string,string> dec = 6;   //能力描述 
}

message SchedulerHeartbeat{
    string scheduler_id = 1; 
    string scheduler_ip = 2;
    int32 scheduler_port = 3;
    int32 timetamp = 4;
    bool is_healthy = 5;
    map<string,string> dec = 6;   //能力描述 
}

